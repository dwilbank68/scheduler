 <!--from units/index.html.erb-->

 <%= div_for unit do %>
    <div class="container unit">
        <div class="row unit-header">
            <div class="col-xs-2">
              <%= link_to '', unit, remote: true, class: 'fa fa-trash-o', method: :delete %>
            </div>
            <div class="col-xs-8 unit-name microgramma-bold txt-centered larger spaced3-6"><%= unit.screen_name %></div>
            <div class="col-xs-2"><i id="lock-pos-<%= unit.id %>" class="fa fa-lock"></i></div>
        </div>
        <div class="spacer"></div>
        <div class="row border-bottom" id="image-<%= unit.id %>">
            <div class="col-xs-12"><%= image_tag(unit.unit_pic.fullsize.url, :class => 'img-rounded unit-image' + blue_outline(unit)) if unit.unit_pic? %></div>
        </div>
        <div class="spacer"></div>
        <div class="row">
            <div class="col-xs-7 pfmech                    gold-glow spaced time-remaining"><div><span>stand by</span></div> </div>
            <div class="col-xs-5 quicksand-reg txt-right  white-glow spaced tiny remaining-label">remaining</div>
        </div>
        <div class="row border-bottom spacer"></div>
        <div class="row">
            <div class="col-xs-7 quicksand-reg white-glow est-time-of-completion">
              <% if unit.duration > 0 %>
                <%= unit.time_available.in_time_zone(current_user.timezone).strftime('%b %e, %l:%M %p') if unit.time_available %>
              <% else %>
                Unit Available
              <% end %>
            </div>
            <div class="col-xs-5 quicksand-reg txt-right    white-glow spaced tiny est-time-of-completion-label">est time of completion</div>
        </div>
      <div>
        <div id="refresh-unit-<%= unit.id %>"       class="refresh"><span class="fa fa-refresh white-glow-dim"></span></div>
        <div id="new-user-for-unit-<%= unit.id %>" class="white-glow-dim microgramma spaced txt-centered">add to queue</div>
        <div id="disable-unit-<%= unit.id %>"       class="toggle"><span class="fa fa-toggle-on white-glow-dim"></span></div>
      </div>
      <div class="spacer"></div>
    </div> <!-- end unit -->


    <!--unit state overlay-->

     <div class="container unit-overlay txt-centered <%= unit_overlay_classes(unit) %>" id="unit-overlay-<%= unit.id %>">
        <div class="row red-glow-no-bg microgramma-bold spaced larger out-of-service">
            <div class="col-xs-12 out-of-service">Disabled</div>
        </div>
       <div class="row red-glow-no-bg quicksand-reg">
         <div class="col-xs-12" id="unit-disabled-by-<%= unit.id %>">by <%= unit.user_disabler %> -- <%= unit.when_disabled.in_time_zone(current_user.timezone).strftime('%b %e, %l:%M %p') if unit.when_disabled %></div>
       </div>
        <div class="row note quicksand-reg red-glow-no-bg">
            <div class="col-xs-12 unit-note">
              <%= best_in_place unit, :note, :as => :textarea, :place_holder => 'note' %>
            </div>
        </div>
        <div id="activate-unit-<%= unit.id %>" class="toggle"><span class="fa fa-toggle-off red-glow"></span></div>
     </div>


     <!--unit notes overlay-->

     <div id="unit-notes-overlay-<%= unit.id %>" class="container unit-notes-overlay blue-glow quicksand-reg">
       <!--<div class="row blue-glow quicksand-reg"><%#= unit.notes %></div>-->
       <%= best_in_place unit, :notes, :as => :textarea, :place_holder => '>' %>
     </div>



    <!--unit user queue-->

    <section class="user-queue"><!--user queue-->
        <ul id="unit-user-ul-<%= unit.id %>">
            <% unit.unit_users.each do |unituser| %>
                <%= render :partial => '/unitusers/unit_user', :locals => { user:unituser.user, unit:unit, unituser: unituser }%>
            <% end %>
        </ul>
    </section> <!-- end user queue -->


     <!-- unit user form-->

    <div id="unit_user_form_<%= unit.id %>" class="container unit_user_form microgramma-bold">
        <%= minimal_form_for([unit, @unit_user], :remote => true, html: {class: 'form-vertical'}) do |f| %>
            <%= f.error_notification %>
            <div class="row">
                <div class="col-xs-12 larger2 white-glow-dim spaced txt-centered">Schedule <%= unit.screen_name %></div>
            </div>
            <div class="spacer"></div>
            <div class="spacer"></div>
            <hr/>
            <div class="row border-bottom">
                <div class="col-xs-12 quicksand-reg white-glow"><%= current_user.name %></div>
            </div>
            <div id="contact-display-<%= unit.id %>">
            <div class="row border-bottom">
                <div class="col-xs-8 quicksand-reg white-glow"><%= current_user.email %></div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:email1_vis] %> email1-visible-display">visible</div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:email1_act] %> email1-active-display">active</div>
            </div>
            <div class="row border-bottom">
                <div class="col-xs-8 quicksand-reg white-glow"><%= current_user.email2 %></div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:email2_vis] %> email2-visible-display">visible</div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:email2_act] %> email2-active-display">active</div>
            </div>
            <div class="row border-bottom">
                <div class="col-xs-8 quicksand-reg white-glow"><%= formatted_phone(current_user.phone) %></div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:phone1_vis] %> phone1-visible-display">visible</div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:phone1_act] %> phone1-active-display">active</div>
            </div>
            <div class="row border-bottom">
                <div class="col-xs-8 quicksand-reg white-glow"><%= formatted_phone(current_user.phone2) %></div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:phone2_vis] %> phone2-visible-display">visible</div>
                <div class="col-xs-2 quicksand-reg txt-right <%= contact_colors(current_user)[:phone2_act] %> phone2-active-display">active</div>
            </div>
            </div>
            <div class="spacer"></div>
            <div class="row">
                <div class="col-xs-12 blue-glow txt-centered quicksand-reg" id="contact-pref-notice-<%= unit.id %>">To change your contact choices, click 'Edit Contact Preferences' in the Navigation Bar</div>
            </div>
            <div class="container time-input">
            <div class='row'>
                <div class="col-xs-6 microgramma-bold spaced white-glow-dim">Unit Available</div>
                <div class="col-xs-6 quicksand-reg white-glow start_time txt-right uu-form-start-time">awaiting unit data</div>
            </div>
            <hr/>
            <div class="spacer"></div>
            <div class="row">
                <div class="col-xs-12 larger txt-centered microgramma-bold spaced white-glow-dim">Set Duration</div>
                <div class="col-xs-12 txt-centered"><%= f.input :duration, :autofocus => true, :input_html => {:min => '0', :max => '1440', :value => 5, :step => '5', :class => 'larger quicksand-reg white-glow'} %> </div>
            </div>
            <div class="spacer"></div>
            <div class="row">
                <div class="col-xs-12 txt-centered">
                    <div class="quicksand-reg white-glow formatted-duration slightly-larger txt-centered">0 hrs 0 min</div>
                    <div class="col-xs-12 quicksand-reg tiny spaced white-glow-dim txt-centered">selecting 0 will set a 5 minute minimum</div>
                </div>
            </div>
            <div class="spacer"></div>
            <hr/>
            <div class="row">
                <div class="col-xs-7 microgramma-bold white-glow-dim spaced">Projected End Time</div>
                <div class="col-xs-5 quicksand-reg white-glow formatted-end-time txt-right">set a duration</div>
            </div>
            </div>
            <div class="spacer"></div>
            <%= f.input :note, :input_html => { :class => 'quicksand-reg white-glow note-field', :cols => 48 } %>
            <%= f.hidden_field :user_id, :value => @user.id %>
            <%= f.hidden_field :start_time, :value => unit.time_available %>
            <div class="spacer"></div>
            <%= f.error :base %>
            <div class="row">
                <div class="col-xs-5">
                    <%= f.button :submit, 'Join Queue', :class => 'white-glow-dim spaced join-queue' %>
                </div>
                <div class="col-xs-7 white-glow-dim lowered spaced quicksand-reg">or press 'esc' to exit</div>
            </div>
        <% end %>
    </div>

<% end %>

<script>
    $(document).ready(function(){

        var $unit = $('#unit_<%= unit.id %>');
        $unit.draggable();
        $unit.offset({ top:<%= unit.pos_y %>, left:<%= unit.pos_x %> });

        var $unitOverlay = $('#unit-overlay-<%= unit.id %>');
        var $form = $('#unit_user_form_<%= unit.id %>');
        $form.hide();


        // if user hovers over a unit, (and the red overlay is not present),
        // fade in the notes field

        $unit.hover(
            function(){
                if($unitOverlay.is(':hidden')) {
                    $('#unit-notes-overlay-<%= unit.id %>').fadeIn();
                }
            },
            function() {
                if($unitOverlay.is(':hidden')) {
                    $('#unit-notes-overlay-<%= unit.id %>').fadeOut();
                }
            }
        );

        // click 'new unituser' button on the unit, you get a modal form, which creates a new unituser in the queue
        $('#new-user-for-unit-<%= unit.id %>').on('click', function(){

            // detach form from machine unit and reattach it to non-blurring layer, which is z-index 2
            $('#non-blur-layer').append($form);

            // blur the container which holds all the machines ( z-index 0)
            $('#blur-layer').removeClass('blur-out');
            $('#blur-layer').addClass('blur-in');

            // bring in the tinted overlay to prevent click-through
            $('#overlay').fadeIn();

            // bring in the form, at a higher z-index
            $($form).fadeIn().css({top:($(window).height()/2)-107, left:($(window).width()/2)-200, zIndex:3});

            // AJAX call to server to get unit's time_available field, or Time.now if the field is nil
            var unit_available, unit_available_string;

            $.ajax({
                url: "/units/<%= unit.id %>/report_status",
                type: "GET",
                dataType: "json",
                success: function(data) {
                    unit_available = moment(data['time_available']);
                    unit_available_string = moment(data['time_available']).format('MMM D, hh:mm A');

                    $('.uu-form-start-time').html(unit_available_string);
//                  var $unitUserUL = $('#unit-user-ul-' + <%#= unit.id %>);
//                  console.log($unitUserUL);
//                  $unitUserUL.empty();
//                  rebuild the unit_user queue based on retrieved data
//                  <ul id="unit-user-ul-<%#= unit.id %>">
//                  <#% unit.unit_users.each do |unituser| %>
//                  <#%= render :partial => '/unitusers/unit_user', :locals => { user:unituser.user, unit:unit, unituser: unituser }%>
//                  <#% end %>
//                  </ul>
                },
                error: function() { console.log("ajax error in call to report_status") }
            });

            // zero out the duration field
            $('.numeric:visible').val(0);
            $('.formatted-duration:visible').html('0 hrs 00 min');

            // zero out the notes field
            $('.note-field:visible').val("");

            // Set up listener to convert duration (in minutes) into a convenient hrs and minutes string
            // With every input change on the unit_user form, the duration field updates, and the end_time field updates

            var min, dur;

            $('.numeric:visible').on('input', function() {

                // grab the minutes integer from the duration box
                min = $('.numeric:visible').val();

                // create a formatted hrs minutes duration string
                dur = parseInt(min/60) + ' hrs ' + (min % 60) + ' min' ;

                // insert that string into the field below
                $('.formatted-duration:visible').html(dur);

                var startMoment = moment(unit_available);

                // end time is calculated by adding minutes to the start time
                var endMoment = startMoment.add(min, 'minutes');

                // end time is inserted in the appropriate field
                $('.formatted-end-time:visible').html(endMoment.format('MMM D, hh:mm A'));
            });


        });


        // if user clicks lock icon, x-y coordinates are sent to the database

        $('#lock-pos-<%= unit.id %>').on('click', function() {
            var top = parseInt($unit.css('top'));
            var left = parseInt($unit.css('left'));
            var posString = left + 'x' + top
            $.ajax({
                type: "PUT",
                dataType: 'json',
                url: '/units/<%= unit.id %>',
                contentType: 'application/json',
//                data: JSON.stringify(posString),
                data: JSON.stringify({ 'position' : posString }),
                success: function(){
                    var $header = $unit.find($('.unit-header > div'));
                    $header.addClass('pulse');
                    setTimeout(function() { $header.removeClass('pulse'); }, 500);
                }
            });
        })


        // if user clicks the email and phone preference display, a window slides
        // down directing him/her to the correct place to edit their contact prefs

        $("#contact-display-<%= unit.id %>").on('click', function() {
            $('#contact-pref-notice-<%= unit.id %>').slideToggle();
        });


        // if user deactivates the unit, a blocking overlay is applied
        // and the 'state' column in the database is updated

        $("#disable-unit-<%= unit.id %>").on('click', function() {
            console.log('disable');
            $('#unit-notes-overlay-<%= unit.id %>').fadeOut();
            $.ajax({
                type: "PUT",
                dataType: 'json',
                url: '/units/<%= unit.id %>',
                contentType: 'application/json',
                data: JSON.stringify({ 'state' : 'disabled', 'user_disabler' : '<%= current_user.name %>'}),
                success: function(){
                   $unitOverlay.removeClass('hidden');
                   $('#activate-unit-<%= unit.id %> span').removeClass('fa-toggle-on');
                   $('#activate-unit-<%= unit.id %> span').addClass('fa-toggle-off');
                   $('#unit-disabled-by-<%= unit.id %>').html('by ' + '<%= current_user.name %>' + ' -- ' + moment().format('MMM D, hh:mm A'));
                }
            });
        });


        // if user reactivates the unit, the blocking overlay is removed
        // and the 'state' column in the database is updated

        $("#activate-unit-<%= unit.id %>").on('click', function() {
            console.log('activate');
            $.ajax({
                type: "PUT",
                dataType: 'json',
                url: '/units/<%= unit.id %>',
                contentType: 'application/json',
                data: JSON.stringify({ 'state' : 'active', 'user_disabler' : ''}),//, 'note': ''}),
                success: function(){
                    $unitOverlay.addClass('hidden');
                    $('#activate-unit-<%= unit.id %> span').addClass('fa-toggle-on');
                    $('#activate-unit-<%= unit.id %> span').removeClass('fa-toggle-off');
                }
            });
        })

        // refresh button GETs current queue from the server and refreshes the DOM

        $('#refresh-unit-<%= unit.id %> span').hover(
            function() { $(this).toggleClass('fa-spin') }
        );

        $("#refresh-unit-<%= unit.id %>").on('click', function() {
            console.log('refresh');
            refreshUnit(<%= unit.id %>);
        })

    });

    ///////////////////////////////////////// functions /////////////////////////////////////

    var refreshUnit = function (id) {
        getReportStatus(id).done( function(result) {
            console.log('result["uu_queue"] is ' + JSON.stringify( result['uu_queue'], null, '  '));
            var $unitUserUL = $('#unit-user-ul-' + id);
//            console.log($unitUserUL);
            $unitUserUL.empty();
            var source = $("#uu-template").html();
            var template = Handlebars.compile(source);
            if(result['uu_queue'] != "[]") {
                var queue = result['uu_queue'];
                for (var i = 0; i < queue.length; i++) {
                    var context = {
                        id:         queue[i]['uuId'],
                        name:       queue[i]['name'],
                        img:        queue[i]['img'],
                        email:      queue[i]['email'],
                        email2:     queue[i]['email2'],
                        phone:      queue[i]['phone'],
                        phone2:     queue[i]['phone2'],
                        start:      queue[i]['start'],
                        duration:   queue[i]['duration'],
                        endHidden:  queue[i]['end_time'],
                        end:        queue[i]['end_time_formatted'],
                        note:       queue[i]['note']
                    };
                    //                console.log('context is ' + context);
                    var html = template(context);
                    console.log('html is ' + html);
                    $unitUserUL.append(html);
                }
            }
        });
//        $.ajax({
//            url: "/units/<%#= unit.id %>/report_status",
//            type: "GET",
//            dataType: "json",
//            success: function(data) {

//                  var $unitUserUL = $('#unit-user-ul-' + <%#= unit.id %>);
//                  console.log($unitUserUL);
//                  $unitUserUL.empty();
//                  rebuild the unit_user queue based on retrieved data
//                  <ul id="unit-user-ul-<%#= unit.id %>">
//                  <#% unit.unit_users.each do |unituser| %>
//                  <#%= render :partial => '/unitusers/unit_user', :locals => { user:unituser.user, unit:unit, unituser: unituser }%>
//                  <#% end %>
//                  </ul>
//            },
//            error: function() { console.log("ajax error in call to report_status") }
//        });

    };

    var getReportStatus = function(id) {
        return $.ajax({
            url: "/units/" + id + "/report_status",
            type: "GET",
            dataType: "json",
            success: function(data) {

            },
            error: function() { console.log("ajax error in call to report_status") }
        });
    }


</script>

<!--//////////////////////////////// handlebars ///////////////////////////////////-->

<script id="uu-template" type="text/x-handlebars-template">
  <li class="unit_user" id="unit_user_{{ id }}">
    <div class="uu-wrapper">
      <div class="container unit-user">

        <div class="row border-bottom">
          <div class="col-xs-12 microgramma-bold larger name spaced">{{name}}<span class="tiny quicksand-reg">({{id}})</span></div>
        </div>
        <div class="spacer"></div>
        <div class="spacer"></div>
        <div class="row">
          <div class="col-xs-3"><img src="{{img}}" alt="Profile profile picture fix 2" class="img-rounded uu-avatar"/></div>
          <div class="col-xs-9">
            <div class="container">
              <div class="row"> <div class="col-xs-10 quicksand-reg email  white-glow smaller">{{email}}</div> </div>
              <div class="row"> <div class="col-xs-10 quicksand-reg email2 white-glow smaller">{{email2}}</div> </div>
              <div class="row"> <div class="col-xs-10 quicksand-reg phone  white-glow smaller">{{phone}}</div> </div>
              <div class="row"> <div class="col-xs-10 quicksand-reg phone2 white-glow smaller">{{phone2}}</div> </div>
            </div>
          </div>
        </div>

        <div class="spacer"></div>

        <div class="row">
          <div class="col-xs-3 microgramma white-glow lowered spaced">BEG</div>
          <div class="col-xs-9 quicksand-reg white-glow txt-centered" id="start_time_{{id}}">{{start}}</div>
        </div>

        <div class="row">
          <div class="col-xs-3 microgramma white-glow lowered spaced" id="duration_{{id}}">DUR</div>
          <div class="col-xs-9 quicksand-reg bip-duration-field white-glow txt-centered">
            <!-- #hrs_min is a method in the unit_user class - returns a formatted duration string -->
            <!--<#% if current_user == user %>-->
                <!--<%#= best_in_place [unit, unituser], :duration, :inner_class => "duration-input", :as => :input, :data => {:unit_duration => unit.duration}, :display_as => :duration_hrs_min %>-->
            <!--<#% else %>-->
                <%#= unituser.duration_hrs_min %>{{{duration}}}
            <!--<%# end %>-->
          </div>
        </div>

        <div class="row">
          <div class="col-xs-3 microgramma white-glow lowered spaced">END</div>
          <div class="col-xs-9 quicksand-reg white-glow txt-centered" id="end_time_{{id}}">{{end}}</div>

          <!--<div class="col-xs-9 quicksand-reg white-glow txt-centered hidden-end-times" id="end-time-hidden-<%#= unituser.id %>"><%#= unituser.end_time.in_time_zone(user.timezone) if unituser.end_time %></div>-->
          <div class="col-xs-9 quicksand-reg white-glow txt-centered hidden-end-times" id="end-time-hidden-{{id}}">{{endHidden}}</div>
        </div>

        <div>
          <div class="note quicksand-reg white-glow">{{note}}
            <%#= best_in_place [unit, unituser], :note, :as => :textarea, :place_holder => 'note' %>
          </div>
        </div>

        <div class="txt-centered">
          <%# if current_user == user %>
              <hr class="unit-user-hr"/>
              <%#= link_to "delete", [unit, unituser], method: :delete, class: 'gold-glow microgramma spaced uu-delete', data: {confirm: 'Are you sure?'}, remote: true %>
          <%# end %>
        </div>

      </div>
    </div>
  </li>
</script>